(function(j){var f;var k;var b;var d;j.fn.inflate=function(e){f=j.extend({width:null,height:null,debug:false},e);this.each(function(){k=j(this);f.width=parseInt(f.width)||null;f.height=parseInt(f.height)||null;if(isNaN(f.width&&isNaN(f.height))){return this}if(f.width&&!isNaN(f.width)){var i=f.width-k.width();var h=this;j(this).width(j(this).width()+i);if(f.debug){console.log("Added "+i+" and resized matched element width to "+j(this).width());console.log("Iterating over parent elements...")}k.parentsUntil(document).each(function(){if(f.debug){console.log("  => Current parent: "+a(this));console.log("  => Previous parent: "+a(this))}if(j(this).width()<j(h).outerWidth(true)){j(this).width(j(this).width()+i);if(f.debug){console.log("    => Resizing "+this.tagName+" ("+a(this)+") from "+j(this).width()+" (width) ");console.log("    => Resized to "+j(this).width())}}else{if(f.debug){console.log("    => No forced resize required.")}}h=this})}if(f.height&&!isNaN(f.height)){var i=f.height-k.height();var h=this;j(this).height(j(this).height()+i);if(f.debug){console.log("Added "+i+" and resized matched element to "+j(this).height());console.log("Iterating over parent elements...")}k.parentsUntil(document).each(function(){if(f.debug){console.log("  => Current parent: "+a(this));console.log("  => Previous parent: "+a(this))}if(j(this).height()<j(h).outerHeight(true)){j(this).height(j(this).height()+i);if(f.debug){console.log("    => Resizing "+this.tagName+" ("+a(this)+") from "+j(this).height()+" (height) ");console.log("    => Resized to "+j(this).height())}}else{if(f.debug){console.log("    => No forced resize required.")}}h=this})}});return this};j.fn.inflateTo=function(e,h){f=j.extend({width:false,height:true,debug:false},h);if(f.debug){console.log("Settings passed to $.maximizeTo:");for(var l in f){console.log("    => settings["+l+"] = "+f[l])}}this.each(function(){k=j(this);if(f.width){var i=e;if(f.debug){console.log("Maximizing width of "+a(this)+" against "+a(i)+" ("+j(i).width()+")")}j(k.parentsUntil(e).get().reverse()).add(this).each(function(m,n){b=j(i).width();if(f.debug){console.log("  => Setting width of "+a(this)+" against "+a(i)+" ("+b+")")}j(i).children().not(this).each(function(){if(j(this).css("position")!="absolute"&&j(this).css("display")!="none"&&j(this).css("float")=="none"){if(f.debug){console.log("    => -"+j(this).outerWidth(true)+" ("+a(this)+")")}b-=j(this).outerWidth(true)}else{if(f.debug){console.log("    => -0 (No need to adjust for "+a(this)+")")}}});j(this).width(b-(j(this).outerWidth(true)-j(this).width()));i=this;if(f.debug){console.log("  => Set height to "+b+" - ( "+j(this).outerWidth(true)+" - "+j(this).width()+" )")}})}if(f.height){var i=e;if(f.debug){console.log("Maximizing height of "+a(this)+" against "+a(i)+" ("+j(i).height()+")")}j(k.parentsUntil(e).get().reverse()).add(this).each(function(m,n){d=j(i).height();if(f.debug){console.log("  => Setting height of "+a(this)+" against "+a(i)+" ("+d+")")}j(i).children().not(this).each(function(){if(j(this).css("position")!="absolute"&&j(this).css("display")!="none"&&j(this).css("float")=="none"){if(f.debug){console.log("    => -"+j(this).outerHeight(true)+" ("+a(this)+")")}d-=j(this).outerHeight(true)}else{if(f.debug){console.log("    => -0 (No need to adjust for "+a(this)+")")}}});j(this).height(d-(j(this).outerHeight(true)-j(this).height()));i=this;if(f.debug){console.log("  => Set height to "+d+" - ( "+j(this).outerHeight(true)+" - "+j(this).height()+" )")}})}});return this};function a(h){var e=h.tagName+(j(h).attr("id")?"#"+j(h).attr("id"):"")+(j(h).attr("class")?"."+j(h).attr("class"):"");return e}if(!("console" in window)||!("firebug" in console)){var g=["log","debug","info","warn","error","assert","dir","dirxml","group","groupEnd","time","timeEnd","count","trace","profile","profileEnd"];window.console={};for(var c=0;c<g.length;++c){window.console[g[c]]=function(){}}}})(jQuery);